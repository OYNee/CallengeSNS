type User {
  id: ID! @id
  userid: String! @unique
  passwd: String!
  email: String! @unique
  username: String! 
  avatar: String
  @default(
      value: "https://www.pngitem.com/pimgs/m/150-1503945_transparent-user-png-default-user-image-png-png.png"
    )
  bio: String
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]! @relation(name: "PostsOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser", onDelete: CASCADE)
  rooms: [Room!]!
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}


type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
type Post {
  id: ID! @id
  post_caption: String!
  user: User! @relation(name: "PostsOfUser")
  likes: [Like!]! @relation(name: "LikeOfPost", onDelete: CASCADE)
  rel_challenger: [User!]! @relation(name: "RelChallOfUser")
  pre_challenger : [User!]! @relation(name: "PreChallOfUser")
  next_challenger : [User!]! @relation(name: "NextChallOfUser")
  tag_challenger: [User!]! @relation(name: "TagChallOfUser")
  hashtags : [Hashtag!]! @relation(name: "HashtagofPost")
  scope : Boolean!
  comments: [Comment!]! @relation(name: "CommentOfPost", onDelete: CASCADE)
  Category: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: ID! @id
  account: User @relation(name: "LikesOfUser")
  post: Post @relation(name: "LikeOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  account: User @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Video{
  video_id: ID! @id
  video_url: String!
  post: Post @relation(name: "ViedoFilesOfPost")
  createdAt: DateTime! @createdAt
}

type Image{
  image_id: ID! @id
  image_url: String!
  post: Post @relation(name: "ImageFilesOfPost")
  createdAt: DateTime! @createdAt
}

type Audio{
  audio_id: ID! @id
  audio_url: String!
  audio_img_url: String! 
  post: Post @relation(name: "AudioFilesOfPost")
  createdAt: DateTime! @createdAt
}

type Text{
  text_id: ID! @id
  text_img_url: String! 
  content: String!
  post: Post @relation(name: "TxtFilesOfPost")
  relay: Boolean!
  createdAt: DateTime! @createdAt
}

type Category {
  cat_id: ID! @id
  cat_name: String!
}

type Hashtag{
  tag_id: ID! @id
  tag_name: String!
  post: [Post!]! @relation(name: "HashtagofPost")

} 